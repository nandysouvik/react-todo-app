{"version":3,"sources":["components/Alert.js","components/List.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","type","message","removeAlert","item","useEffect","timeout","setTimeout","clearTimeout","className","List","items","removeItem","editItem","map","id","title","style","float","onClick","App","useState","todo","setTodo","localStorage","getItem","JSON","parse","setItem","isEditing","setIsEditing","editID","setEditID","show","msg","alert","setAlert","stringify","showAlert","onSubmit","e","preventDefault","newItem","Date","getTime","toString","marginBottom","textAlign","placeholder","onChange","target","value","length","marginTop","filter","find","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d392fc03.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\r\n\r\nfunction Alert({ type, message, removeAlert, item }) {\r\n\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      removeAlert();\r\n    }, 3000)\r\n    return () => clearTimeout(timeout);\r\n  })\r\n\r\n  return (\r\n    <p className={`alert alert-${type}`}>{message}</p>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n\r\n","import React from 'react'\r\nimport { FaEdit, FaTrash } from \"react-icons/fa\"\r\n\r\nexport const List = ({ items, removeItem, editItem }) => {\r\n  return (\r\n    <div className=\"container\">\r\n      {items.map((item) => {\r\n        const { id, title } = item;\r\n        return (\r\n          <ul className=\"list-group list-group-flush\" key={id}>\r\n            <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n              {title}\r\n              <div style={{ float: 'right' }}>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"edit-btn\"\r\n                  onClick={() => editItem(id)}\r\n                >\r\n                  <FaEdit />\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"delete-btn\"\r\n                  onClick={() => removeItem(id)}\r\n                >\r\n                  <FaTrash />\r\n                </button>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react';\nimport Alert from './components/Alert';\nimport { List } from './components/List';\n\nconst getLocalStorage = () => {\n  let list = localStorage.getItem(\"items\");\n  if (list) {\n    return (list = JSON.parse(localStorage.getItem(\"items\")));\n  } else {\n    return [];\n  }\n};\n\nfunction App() {\n  const [todo, setTodo] = useState(\"\");\n  const [items, setItem] = useState(getLocalStorage());\n  const [isEditing, setIsEditing] = useState(false);\n  const [editID, setEditID] = useState(null);\n  const [alert, setAlert] = useState({ show: false, msg: \"\", type: \"\" });\n\n  useEffect(() => {\n    localStorage.setItem(\"items\", JSON.stringify(items));\n  }, [items])\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!todo) {\n      showAlert(true, \"danger\", \"Please enter the value\");\n    } else if (todo && isEditing) {\n      setItem(\n        items.map((item) => {\n          if (item.id === editID) {\n            return {\n              ...item,\n              title: todo\n            }\n            return item;\n          }\n        })\n      )\n      setTodo(\"\")\n      setEditID(null);\n      setIsEditing(false);\n      showAlert(true, \"success\", \"Value Changed\");\n    } else {\n      showAlert(true, \"success\", \"Item Added\");\n      const newItem = { id: new Date().getTime().toString(), title: todo };\n      setItem([...items, newItem]);\n      setTodo(\"\");\n    }\n  };\n\n  const showAlert = (show = false, type = \"\", message = \"\") => {\n    setAlert({ show, type, message });\n  };\n\n  const removeItem = (id) => {\n    showAlert(true, \"danger\", \"Item Removed\");\n    setItem(items.filter((item) => item.id !== id));\n  };\n\n  const editItem = (id) => {\n    const editItem = items.find((item) => item.id === id);\n    setIsEditing(true);\n    setEditID(id);\n    setTodo(editItem.title);\n  };\n\n  const clearItem = () => {\n    showAlert(true, \"danger\", \"List Emptied\");\n    setItem([]);\n  };\n\n\n  return (\n    <section className=\"section-center\">\n      <form onSubmit={handleSubmit} className=\"formList\">\n        {alert.show && <Alert {...alert} removeAlert={showAlert} item={items} />}\n        <h3 style={{ marginBottom: \"1.5rem\", textAlign: \"center\" }}>\n          TODO LIST\n        </h3>\n        <div className=\"mb-3 form\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"e.g Chicken Noodle Soup\"\n            onChange={(e) => setTodo(e.target.value)}\n            value={todo}\n          />\n          <button type=\"submit\" className=\"btn btn-success\">\n            {isEditing ? \"Edit\" : \"Submit\"}\n          </button>\n        </div>\n      </form>\n      {items.length > 0 && (\n        <div style={{ marginTop: \"2rem\" }}>\n          <List items={items} removeItem={removeItem} editItem={editItem} />\n          <div className=\"text-center\">\n            <button className=\"btn btn-warning\" onClick={clearItem}>Clear Items</button>\n          </div>\n        </div>\n      )}\n    </section>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}